/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "process.h"
/* Header for class org_easyprjava_jni_EasyPR */

#ifndef _Included_org_easyprjava_jni_EasyPR
#define _Included_org_easyprjava_jni_EasyPR
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_easyprjava_jni_EasyPR
 * Method:    plateRecognize
 * Signature: (I[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL plateRecognize
(JNIEnv *, jobject, Process *, jbyteArray);

/*
 * Class:     org_easyprjava_jni_EasyPR
 * Method:    initPath
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT Process * JNICALL initPath
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_easyprjava_jni_EasyPR
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT Process * JNICALL init
  (JNIEnv *, jobject);

/*
 * Class:     org_easyprjava_jni_EasyPR
 * Method:    delete
 * Signature: (I)V
 */
JNIEXPORT void JNICALL deleteptr
(JNIEnv *, jobject, Process *);

static JNINativeMethod methods[]{
	{ "plateRecognize", "(I[B)Ljava/lang/String;", (void *)plateRecognize},
	{ "initPath", "(Ljava/lang/String;)I", (void *)initPath },
	{ "init", "()I", (void *)init },
	{ "delete", "(I)V", (void *)deleteptr}
};

static const char * classPathName = "org/easyprjava/jni/EasyPR";
typedef union {
	JNIEnv* env;
	void* venv;
} UnionJNIEnvToVoid;

static int registerNativeMethods(JNIEnv* env, const char* className,
	JNINativeMethod* gMethods, int numMethods);

static int registerNatives(JNIEnv* env);

#ifdef __cplusplus
}
#endif
#endif
